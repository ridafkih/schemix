datasource database {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator prismaThirdPartyGenerator {
  provider               = "prisma-includes-generator"
  seperateRelationFields = true
}

enum Status {
  PENDING
  LIVE
  DELETED
  REMOVED
}

enum UserType {
  USER
  SUPERUSER
}

model Post {
  status    Status
  text      String
  id        String   @id @default(uuid()) @database.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [email])
  authorId  String

  @@map("post")
}

model User {
  posts           Post[]
  auth            Auth?
  friends         User[]   @relation(name: "friends")
  friendRelations User[]   @relation(name: "friends")
  email           String
  fullName        String
  type            UserType @default(USER)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("user")
  @@id([email])
}

model Auth {
  hash   String
  salt   String
  user   User   @relation(fields: [userId], references: [email])
  userId String @unique
  id     String @id @default(uuid()) @database.Uuid
}
